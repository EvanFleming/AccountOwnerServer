// <auto-generated />
using System;
using AccountOwnerServer.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountOwnerServer.Migrations
{
    [DbContext(typeof(DBInteractor))]
    partial class DBInteractorModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.HasIndex("OwnerId");

                    b.ToTable("account");

                    b.HasData(
                        new
                        {
                            AccountId = new Guid("31d36ccb-672c-4d82-83f4-e18e54a33675"),
                            AccountType = "Admin",
                            DateCreated = new DateTime(2023, 6, 27, 9, 59, 27, 239, DateTimeKind.Local).AddTicks(3282),
                            OwnerId = new Guid("f845d6a5-8858-4c0f-a918-4ea7f18870e9")
                        },
                        new
                        {
                            AccountId = new Guid("4eb135de-f3b2-4aa3-ae57-22c9350ad948"),
                            AccountType = "User",
                            DateCreated = new DateTime(2023, 6, 27, 9, 59, 27, 239, DateTimeKind.Local).AddTicks(3286),
                            OwnerId = new Guid("63cb2e8d-109e-4f64-bf17-4e4de01bf841")
                        });
                });

            modelBuilder.Entity("Entities.Models.Owner", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("OwnerId");

                    b.ToTable("owner");

                    b.HasData(
                        new
                        {
                            OwnerId = new Guid("f845d6a5-8858-4c0f-a918-4ea7f18870e9"),
                            Address = "1234 Paved Road Kingston, Ontario K0H 1X0",
                            DateOfBirth = new DateTime(1998, 6, 27, 9, 59, 27, 239, DateTimeKind.Local).AddTicks(3106),
                            Name = "George Smith"
                        },
                        new
                        {
                            OwnerId = new Guid("63cb2e8d-109e-4f64-bf17-4e4de01bf841"),
                            Address = "1234 Gravel Road Kingston, Ontario K0H 1J0",
                            DateOfBirth = new DateTime(1980, 6, 27, 9, 59, 27, 239, DateTimeKind.Local).AddTicks(3159),
                            Name = "Dave jones"
                        });
                });

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.HasOne("Entities.Models.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Entities.Models.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
